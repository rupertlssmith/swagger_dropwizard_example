/*
 * HibernateDAOInterface is an implementation of the Generator interface, that creates
 * interfaces for DAOs based on Hibernate, for all top-level entities in a model.
 */
import "JavaCommon.stg"

/*
 * Creates the opening section of an output file, if one is required.
 */
file_open(catalogue, package) ::= <<
file_open
>>

/*
 * Generates the output for a bean in the specified catalogue.
 */
for_bean(catalogue, package, decorator, fields, extraFields) ::= <<
<if(decorator.entitySubType)>
<entity_service(catalogue=catalogue, package=package, decorator=decorator, name=decorator.name)>
<endif>
>>

/*
 * Creates the closing section of an output file, if one is required.
 */
file_close() ::= <<
file_close
>>

/*
 * Creates a bean class for an entity type, with name/type fields, for a given catalogue model.
 */
entity_service(catalogue, package, decorator, name) ::= <<
<service_interface(catalogue=catalogue, package=package, decorator=decorator, name=name)>
>>

service_interface(catalogue, package, decorator, name) ::= <<
package <package>;

import java.lang.reflect.Proxy;

import com.thesett.test.base.WebServiceIsolationCRUDTestBase;
import com.thesett.util.entity.CRUD;
import com.thesett.util.proxies.DefaultProxy;

import com.thesett.accounts.dao.<name; format="ccu">DAO;
import com.thesett.accounts.model.<name; format="ccu">;
import com.thesett.accounts.services.rest.<name; format="ccu">Resource;

public class <name; format="ccu">ServiceWebServiceIsolationCRUDTest extends WebServiceIsolationCRUDTestBase\<<name; format="ccu">, Long>
{
    public <name; format="ccu">ServiceWebServiceIsolationCRUDTest()
    {
        super(new <name; format="ccu">TestData());
    }

    protected CRUD\<<name; format="ccu">, Long> getServiceLayer(CRUD\<<name; format="ccu">, Long> dao)
    {
        <name; format="ccu">DAO <name; format="cc">DAO =
            (<name; format="ccu">DAO) Proxy.newProxyInstance(dao.getClass().getClassLoader(), new Class[] { <name; format="ccu">DAO.class },
                new DefaultProxy(dao));

        return new <name; format="ccu">Resource(<name; format="cc">DAO);
    }
}
>>